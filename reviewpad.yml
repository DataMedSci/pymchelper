# This file is used to configure Reviewpad.
# For more details see https://docs.reviewpad.com/guides/syntax

mode: silent
ignore-errors: false
metrics-on-merge: false 


labels:
  small:
    description: Pull request is small
    color: "#76dbbe"
  medium:
    description: Pull request is medium
    color: "#2986cc"
  large:
    description: Pull request is large
    color: "#c90076"


workflows:
  - name: summarize
    description: Summarize the pull request
    run:
      - if: $state() == "open" && $isDraft() == false &&
            ($eventType() == "opened" || $eventType() == "synchronize" || $eventType() == "ready_for_review")
        then: $summarize()


  - name: praise-contributors-on-milestones
    description: Praise contributors based on their contributions
    run:
      - if: $pullRequestCountBy($author()) == 1
        then: $commentOnce($sprintf("Thank you @%s for this first contribution!", [$author()]))


  - name: best-practices
    description: Validate best practices for pull request management
    run:
      - if: $state() == "open" && $isDraft() == false
        then:
          - if: $description() == ""
            then: $warn("Please provide a description for the pull request")
          - if: $hasLinearHistory() == false
            then: $warn("Please rebase your pull request on the latest changes")


  - name: size-labeling
    description: Label pull request based on the number of lines changed
    run:
      - if: $size() < 100
        then: $addLabel("small")
        else: $removeLabel("small")
      - if: $size() >= 100 && $size() < 800
        then: $addLabel("medium")
        else: $removeLabel("medium")
      - if: $size() >= 800
        then: $addLabel("large")
        else: $removeLabel("large")


  - name: check-approvals
    description: Check that pull requests have the required number of approvals
    run:
      - if: $state() == "open" && $isDraft() == false && $approvalsCount() < 1
        then: $addLabel("waiting-for-review")


  - name: license-validation
    description: Validate that licenses are not modified
    run:
      - if: $hasFilePattern("**/LICENSE*")
        then: $fail("License files cannot be modified")