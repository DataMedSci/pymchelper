name: Automated tests

on:
  push:
    branches: [ master ]
    tags: ['*']
  pull_request:
    branches: [ master ]
  release:
    types: [published]

jobs:
  # fast tests inluding linter and couple of fastests unit tests run with pytest
  smoke_test:
    if: >
      !contains(github.event.head_commit.message, '[ci skip]') &&
       !contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # fetch all history, as by default only last 1 commit is fetched

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r tests/requirements-test.txt

    - name: Lint with flake8
      run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 --count --select=E9,F63,F7,F82 --show-source --statistics pymchelper tests examples

    - name: Smoke test with pytest
      run: |
         pytest -k "smoke"

  generate-docs:
    runs-on: ubuntu-latest
    needs: [smoke_test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all history, as by default only last 1 commit is fetched

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt

      - name: Build Sphinx documentation
        run: |
          sphinx-apidoc --output-dir docs/apidoc/ pymchelper
          sphinx-build --jobs auto docs docs/_build

      - name: Upload documentation artifact
        uses: actions/upload-artifact@v3
        with:
          name: sphinx-docs
          path: docs/_build


  # all tests on matrix of all possible python versions and OSes
  normal_test:
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        platform: [ubuntu-latest, macos-13, windows-latest] # we stick to macOS 13, as macOS 14 comes with M1 amd architecture (and we don't have pytrip98 arm binary wheels)
        exclude:
          - platform: macos-13
            python-version: '3.10'
          - platform: macos-13
            python-version: '3.11'
          - platform: macos-13
            python-version: '3.12'
    runs-on: ${{ matrix.platform }}
    needs: [smoke_test]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # fetch all history, as by default only last 1 commit is fetched

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r tests/requirements-test.txt

    - name: Test with pytest
      run: |
         pytest -k "not slow"
