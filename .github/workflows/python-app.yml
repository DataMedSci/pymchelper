# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
    tags: '*'
  pull_request:
    branches: [ master ]
  release:
    types: [published]

jobs:
  smoke_test:
    if: "github.repository == 'DataMedSci/pymchelper' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest        
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2.3.0
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r tests/requirements-test.txt

    - name: Smoke test with tox
      run: |         
         tox -e py -- -k "smoke"
         tox -e pep8
         
         
  normal_test:
    if: "github.repository == 'DataMedSci/pymchelper' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, 3.9]
        platform: [ubuntu-latest, macos-latest, windows-latest]
        exclude:
          - platform: macos-latest
            python-version: 3.5
          - platform: macos-latest
            python-version: 3.6
          - platform: macos-latest
            python-version: 3.7
          - platform: macos-latest
            python-version: 3.8
          - platform: windows-latest
            python-version: 3.5
          - platform: windows-latest
            python-version: 3.6
    runs-on: ${{ matrix.platform }}
    needs: [smoke_test]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2.3.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r tests/requirements-test.txt

    - name: Test with tox
      run: |         
         tox -e py -- -k "not slow"
         
         
  full_test:
    if: "github.repository == 'DataMedSci/pymchelper' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        python-version: [2.7, 3.5, 3.9]
    runs-on: ubuntu-latest
    needs: [normal_test]        
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2.3.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r tests/requirements-test.txt

    - name: Run all test with tox
      run: |         
         tox -e py
         
    - name: Check images generation for documentation
      run: |         
         cd docs/images_generation && ./run.sh


  make_and_upload_package:
    if: "github.repository == 'DataMedSci/pymchelper' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"

    runs-on: ubuntu-latest
    needs: [full_test]
    steps:
    - uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v2.3.0
      with:
        python-version: 3.9
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Make wheel package
      run: |         
        pip install wheel
        
        # first call to version method would generate VERSION  file
        PYTHONPATH=. python pymchelper/run.py --version
        
        python setup.py bdist_wheel

        # makes source package
        python setup.py sdist

    - name: publish package to pypi
      uses: pypa/gh-action-pypi-publish@v1.4.2
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      with:
        # Password for your PyPI user or an access token
        password: ${{ secrets.TWINE_PASSWORD }}
        # The repository URL to use
        repository_url: "https://upload.pypi.org/legacy/"
        # The target directory for distribution
        packages_dir: dist/
        # Show verbose output.
        verbose: true
